{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","handleSubmit","type","value","onChange","target","handleInputChange","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBACrCC,EADqC,KAC1BC,EAD0B,KAc5C,OACI,0BAAMC,SAAU,SAACC,GAAD,OATC,SAACA,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,KAKKO,CAAaL,KAChC,2BACIM,KAAK,OACLC,MAAOV,EACPW,SAAU,SAACR,GAAD,OAhBI,SAACA,GACvBF,EAAcE,EAAES,OAAOF,OAeEG,CAAkBV,Q,uBCtBtCW,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QARrB,kBAWbM,GAXa,4CAAH,sDCERO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAClC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACZhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAVAC,qBAAU,WACNxB,EAASC,GACRwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGlB,CAACpB,IAEIqB,EDZuBK,CAAa1B,GAA/Ba,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAEnB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAU,uBAAGJ,UAAU,oCAAb,cAEX,yBAAKA,UAAU,aACX,4BAEQH,EAAOJ,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,WEjBvBkB,EAAe,WAAO,IAAD,EAEK5C,mBAAS,CAAC,cAFf,mBAEvB6C,EAFuB,KAEZ9C,EAFY,KAU9B,OACI,oCACE,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BACK8C,EAAWpB,KAAI,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACE2B,IAAK3B,EACLA,SAAUA,UCpB9B8B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.86bc0828.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue,setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={(e) => handleSubmit(e)}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={(e) => handleInputChange(e)}>\r\n            </input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n","export const getGifts = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=U6k8BavMUSgJfVQbzpGI1o8S9svbKcxY`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    //Se esta renombrando data por images\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading&& <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n           \r\n            <div className=\"card-grid\">\r\n                <ol>\r\n                    {\r\n                        images.map((img) => (\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                {...img}/>\r\n                        ))\r\n                    }\r\n                </ol>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react';\r\nimport {getGifts} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    //Los efectos no pueden ser async\r\n    useEffect(() => {\r\n        getGifts(category)\r\n        .then(imgs => {\r\n            setstate({\r\n                data:imgs,\r\n                loading:false\r\n            })\r\n        })\r\n    },[category])\r\n\r\n    return state;\r\n}","import React,{useState} from 'react';\r\n\r\nimport {AddCategory} from './AddCategory';\r\nimport {GifGrid} from './GifGrid';\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n    const [categories,setCategories] = useState(['One Punch']);\r\n\r\n    /*\r\n    const handleAdd = () => {\r\n        //setCategories([...categories,'HunterxHunter']);\r\n        setCategories(cats => [...categories,'HunterxHunter']);\r\n    }*/\r\n\r\n    return (\r\n        <>\r\n          <h2> GifExpertApp </h2>\r\n          <AddCategory setCategories={setCategories}/>\r\n          <hr />\r\n\r\n\r\n          <ol>\r\n              {categories.map(category => \r\n                  <GifGrid \r\n                    key={category}\r\n                    category={category}/>\r\n              )}\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {GitExpertApp} from './components/GitExpertApp';\n\nReactDOM.render(\n    <GitExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}